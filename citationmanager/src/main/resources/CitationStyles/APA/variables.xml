<?xml version="1.0" encoding="UTF-8"?>
<!--
	CDDL HEADER START The contents of this file are subject to the terms
	of the Common Development and Distribution License, Version 1.0 only
	(the "License"). You may not use this file except in compliance with
	the License. You can obtain a copy of the license at
	license/ESCIDOC.LICENSE or http://www.escidoc.org/license. See the
	License for the specific language governing permissions and
	limitations under the License. When distributing Covered Code, include
	this CDDL HEADER in each file and include the License file at
	license/ESCIDOC.LICENSE. If applicable, add the following below this
	CDDL HEADER, with the fields enclosed by brackets "[]" replaced with
	your own identifying information: Portions Copyright [yyyy] [name of
	copyright owner] CDDL HEADER END Copyright 2006-2010
	Fachinformationszentrum Karlsruhe Gesellschaft für
	wissenschaftlich-technische Information mbH and Max-Planck-
	Gesellschaft zur Förderung der Wissenschaft e.V. All rights reserved.
	Use is subject to license terms.
--> 
<!--
	APA default variables for the transformations from eSciDoc Citation Style Configuration Language 
	to the Citation Style Execution XSLT 
	See http://colab.mpdl.mpg.de/mediawiki/CitationStyleConfigurationConcept
	and https://zim02.gwdg.de/repos/common/trunk/common_services/citationmanager/src/main/resources/Schemas/citation-style.xsd
	Author: Vlad Makarenko (initial creation) $Author$ (last changed)
	$Revision$ $LastChangedDate$
-->
<variables xmlns="http://www.escidoc.de/citationstyle">
	
	<!-- genre labels -->
	<variable name="apa_default_variable">'APA specific default variable'</variable>
	
	
		<!-- variables which use xpath directly in DataSource NS-->

		<!--		NOTE: -->
		<!--		the type should be set forcibly for the cases .. otherwise error: -->
		<!--		XTDE0420: Cannot create an attribute node whose parent is a document node-->
		<!--		??????-->

		<!-- ### objid should be always defined!!! ### -->
		<variable name="objid" >../../@objid</variable>
		<!--  -->
		
		<variable name="genre">pub:publication/@type</variable>
		<variable name="source-type">pub:publication/source:source[1]/@type</variable>
		<variable name="hasPublication" type="xs:boolean">exists(pub:publication)</variable>
		<variable name="authorsCount">count(pub:publication/eterms:creator[@role=$l_author or @role=$l_developer or @role=$l_interviewee])</variable>
		<variable name="editorsCount">count(pub:publication/eterms:creator[@role=$l_editor])</variable>
		<variable name="ed-postfix">if ($editorsCount=1) then 'Ed.' else 'Eds.'</variable>
		<variable name="sourceEditorsCount">count(pub:publication/source:source[1]/eterms:creator[@role=$l_editor])</variable>
		<variable name="source-ed-postfix">if ($sourceEditorsCount=1) then 'Ed.' else 'Eds.'</variable>
		<variable name="genre-exception" type="xs:boolean">$genre=( $l_poster, $l_talk-at-event, $l_courseware-lecture )</variable>

		<!-- Dates block -->
		<variable name="date"> 
			if ($genre=$l_manuscript and pub:publication/dcterms:created) 
			then func:get_year(pub:publication/dcterms:created)  
			else if ($genre-exception and pub:publication/event:event/eterms:start-date and pub:publication/event:event/eterms:start-date!='')
			then func:get_year(pub:publication/event:event/eterms:start-date) 
			else if (pub:publication/dcterms:issued)
			then func:get_year(pub:publication/dcterms:issued) 
			else if (pub:publication/eterms:published-online) 
			then func:get_year(pub:publication/eterms:published-online) 
			else if (( $genre-exception and $genre=$l_manuscript) and pub:publication/dcterms:dateAccepted)
			then func:get_year(pub:publication/dcterms:dateAccepted)
			else if (pub:publication/dcterms:dateAccepted) 
			then 'in press' 
			else if	(( $genre-exception or $genre=$l_manuscript) and pub:publication/dcterms:dateSubmitted)
			then func:get_year(pub:publication/dcterms:dateSubmitted)
			else if (pub:publication/dcterms:dateSubmitted) 
			then 'submitted' 
			else if	(( $genre-exception or $genre=$l_manuscript) and pub:publication/dcterms:modified)
			then func:get_year(pub:publication/dcterms:modified)
			else if (( $genre-exception or $genre=$l_manuscript) and pub:publication/dcterms:created)
			then func:get_year(pub:publication/dcterms:created)
			else if (pub:publication/dcterms:modified or pub:publication/dcterms:created) 
			then 'in preparation' 
			else if (not($genre = ( $l_journal, $l_series)))
			then 'n.d.'
			else ''
		</variable>
		
		<variable name="start-date-or-date">
			if (pub:publication/event:event/eterms:start-date) 
			then pub:publication/event:event/eterms:start-date
			else $date
		</variable>

		<variable name="date-for-thesis">
			if (pub:publication/dcterms:issued)
			then func:get_year(pub:publication/dcterms:issued) 
			else if (pub:publication/dcterms:dateAccepted)
			then func:get_year(pub:publication/dcterms:dateAccepted) 
			else if (pub:publication/eterms:published-online)
			then func:get_year(pub:publication/eterms:published-online) 
			else ''
		</variable>
		
		<!-- see http://colab.mpdl.mpg.de/mediawiki/PubMan_Func_Spec_Export/APA#Citation_of_not_yet_published_works_.28valid_for_all_genres.2C_except_for_manuscript.2C_teaching_.28Lecture.2FCourseware.29.2C_Talk_at_event.2C_Poster.29 -->
		<variable name="notPublishedRule" type="xs:boolean">
			$date = ( 'submitted', 'in preparation') and
			not( $genre = ($l_manuscript, $l_courseware-lecture, $l_talk-at-event, $l_poster) )
		</variable>		
		
		
		<variable name="degree">
			concat (
				(if (not($v_degree))
				then ''
				else if ($v_degree=$l_phd)
				then 'PhD '
				else concat ($l_degree, ' ')),
				'Thesis'
			)		
		</variable>
		
		
		<variable name="doi">(pub:publication/dc:identifier[@xsi:type='eterms:DOI'])[1]/text()</variable>
		<variable name="uri">(pub:publication/dc:identifier[@xsi:type='eterms:URI'])[1]/text()</variable>
		
		<variable name="doi-or-uri">
			if ($doi!='') then concat('doi:', $doi) 
			else if ($uri!='') then concat('Retrieved from ', $uri)
			else ''
		</variable>
		
		<variable name="published-online-and-external-locator">
			if (($genre=$l_article or $genre=$l_magazine-article) or pub:publication/eterms:published-online) 
			then $doi-or-uri
			else ''	
		</variable>	
		
</variables>