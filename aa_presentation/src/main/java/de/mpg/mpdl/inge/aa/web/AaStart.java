/*
 *
 * CDDL HEADER START
 *
 * The contents of this file are subject to the terms of the Common Development and Distribution
 * License, Version 1.0 only (the "License"). You may not use this file except in compliance with
 * the License.
 *
 * You can obtain a copy of the license at license/ESCIDOC.LICENSE or
 * http://www.escidoc.org/license. See the License for the specific language governing permissions
 * and limitations under the License.
 *
 * When distributing Covered Code, include this CDDL HEADER in each file and include the License
 * file at license/ESCIDOC.LICENSE. If applicable, add the following below this CDDL HEADER, with
 * the fields enclosed by brackets "[]" replaced with your own identifying information: Portions
 * Copyright [yyyy] [name of copyright owner]
 *
 * CDDL HEADER END
 */

/*
 * Copyright 2006-2012 Fachinformationszentrum Karlsruhe Gesellschaft für
 * wissenschaftlich-technische Information mbH and Max-Planck- Gesellschaft zur Förderung der
 * Wissenschaft e.V. All rights reserved. Use is subject to license terms.
 */

package de.mpg.mpdl.inge.aa.web;

import de.mpg.mpdl.inge.util.PropertyReader;
import jakarta.servlet.http.HttpServlet;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;
import java.io.IOException;
import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

/**
 * TODO Description
 *
 * @author franke (initial creation)
 * @author $Author$ (last modification)
 * @version $Revision$ $LastChangedDate$
 *
 */
@SuppressWarnings("serial")
public class AaStart extends HttpServlet {

  private static final Pattern authPattern = Pattern.compile("(\\?|&)auth=[^&]*(&auth=[^&]*)*");
  private static final String DEFAULT_ENCODING = "UTF-8";

  @Override
  protected void doGet(HttpServletRequest request, HttpServletResponse response) throws IOException {
    doPost(request, response);
  }

  /**
   * This servlet is expecting 2 parameters:
   * <p>
   * - tan: A random string generated by the client system to check whether the result is valid or
   * not. - target: The URL the user should be redirected to after authentication.
   *
   */
  protected void doPost(HttpServletRequest request, HttpServletResponse response) throws IOException {
    request.setCharacterEncoding(DEFAULT_ENCODING);
    response.setCharacterEncoding(DEFAULT_ENCODING);

    String from = request.getParameter("from");
    String tan = request.getParameter("tan");

    Matcher matcher = authPattern.matcher(from);
    from = matcher.replaceAll("");

    String target = request.getParameter("target");

    if (target == null) {
      target = PropertyReader.getProperty(PropertyReader.INGE_AA_DEFAULT_TARGET);
    }

    String separator = "?";
    if (target.contains("?")) {
      separator = "&";
    }
    target += separator + "target=" + URLEncoder.encode(from, StandardCharsets.ISO_8859_1) + "&tan="
        + URLEncoder.encode(tan, StandardCharsets.ISO_8859_1);

    response.sendRedirect(target);
  }
}
