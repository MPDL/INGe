<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>de.mpg.mpdl.inge</groupId>
		<artifactId>INGe</artifactId>
		<version>8.4.13-SNAPSHOT</version>
	</parent>

	<artifactId>pubman_ear</artifactId>
	<name>pubman_ear</name>
	<packaging>ear</packaging>

	<scm>
		<connection>scm:git:https://github.com/MPDL/INGe.git</connection>
		<developerConnection>scm:git:https://github.com/MPDL/INGe.git</developerConnection>
		<url>https://github.com/MPDL/INGe</url>
		<tag>HEAD</tag>
	</scm>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-ear-plugin</artifactId>
				<configuration>
					<applicationName>pubman_ear</applicationName>
					<displayName>pubman</displayName>
					<description>Pubman</description>
					<earSourceDirectory>target/classes/in_ear</earSourceDirectory>
					<packagingExcludes>./*.properties</packagingExcludes>
					<version>8</version>
					<defaultLibBundleDir>lib</defaultLibBundleDir>
					<skinnyWars>true</skinnyWars>
					<initializeInOrder>true</initializeInOrder>	
					<modules>
						<webModule>
							<groupId>de.mpg.mpdl.inge</groupId>
							<artifactId>aa_presentation</artifactId>
							<contextRoot>/auth</contextRoot>
						</webModule>
						<webModule>
							<groupId>de.mpg.mpdl.inge</groupId>
							<artifactId>cone_presentation</artifactId>
							<contextRoot>/cone</contextRoot>
						</webModule>
						<webModule>
							<groupId>de.mpg.mpdl.inge</groupId>
							<artifactId>pubman_presentation</artifactId>
							<contextRoot>/pubman</contextRoot>
						</webModule>
						<webModule>
							<groupId>de.mpg.mpdl.inge</groupId>
							<artifactId>pubman_rest</artifactId>
							<contextRoot>/rest</contextRoot>
						</webModule>
					</modules>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>buildnumber-maven-plugin</artifactId>
				<executions>
					<execution>
						<phase>validate</phase>
						<goals>
							<goal>create</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<format>{0,date,yyyy-MM-dd HH:mm:ss}</format>
					<items>
						<item>timestamp</item>
					</items>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<configuration>
					<encoding>UTF-8</encoding>
					<nonFilteredFileExtensions>
						<nonFilteredFileExtension>ttf</nonFilteredFileExtension>
					</nonFilteredFileExtensions>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>deploy-artifacts</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-antrun-plugin</artifactId>
						<executions>
							<execution>
								<id>prepare-deployment</id>
								<phase>package</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<target>
										<!-- first copy the ear file to a temporary directory and move it to the deployment directory afterwards -->  
										<copy overwrite="true" file="${project.build.directory}/${project.build.finalName}.${project.packaging}" todir="${jboss.install.dir}/standalone/deployments" />
										<!-- configuration for the deploy wildfly server -->
										<copy overwrite="true" file="${project.build.directory}/classes/module.xml" todir="${jboss.install.dir}/modules/pubman/main" />
										<!-- copy over the configuration file -->
										<copy overwrite="true" file="${project.build.directory}/classes/pubman.properties" todir="${jboss.install.dir}/modules/pubman/main" />
										<copy overwrite="true" file="${project.build.directory}/classes/solution.properties" todir="${jboss.install.dir}/modules/pubman/main" />
									</target>
								</configuration>
							</execution>
						</executions>
						<dependencies>
							<dependency>
								<groupId>ant</groupId>
								<artifactId>ant-trax</artifactId>
								<version>1.6.5</version>
							</dependency>
						</dependencies>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>jenkins_deploy</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-antrun-plugin</artifactId>
						<executions>
							<execution>
								<id>prepare-deployment</id>
								<phase>package</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<target>
										<!-- first copy the ear file to a temporary directory and move it to the deployment directory afterwards -->  
										<scp file="${project.build.directory}/${project.build.finalName}.${project.packaging}" todir="${jboss.user.scp}:${jboss.tmp.deploy}" keyfile="${user.home}/.ssh/id_rsa" knownhosts="${user.home}/.ssh/known_hosts" passphrase="" trust="true" verbose="true" />
										<!-- configuration for the deploy wildfly server -->
										<scp file="${project.build.directory}/classes/module.xml" todir="${jboss.user.scp}:${jboss.install.dir}/modules/pubman/main" keyfile="${user.home}/.ssh/id_rsa" knownhosts="${user.home}/.ssh/known_hosts" passphrase="" trust="true" verbose="true" />
										<!-- copy over the configuration file -->
										<scp file="${project.build.directory}/classes/pubman.properties" todir="${jboss.user.scp}:${jboss.install.dir}/modules/pubman/main" keyfile="${user.home}/.ssh/id_rsa" knownhosts="${user.home}/.ssh/known_hosts" passphrase="" trust="true" verbose="true" />
										<scp file="${project.build.directory}/classes/solution.properties" todir="${jboss.user.scp}:${jboss.install.dir}/modules/pubman/main" keyfile="${user.home}/.ssh/id_rsa" knownhosts="${user.home}/.ssh/known_hosts" passphrase="" trust="true" verbose="true" />
										<!-- finally move the ear file to the deployment directory -->	
										<sshexec host="${jboss.host}" username="${jboss.username}" keyfile="${user.home}/.ssh/id_rsa" knownhosts="${user.home}/.ssh/known_hosts" passphrase="" trust="true" verbose="true" command="mv -f ${jboss.tmp.deploy}/${project.build.finalName}.${project.packaging} ${jboss.install.dir}/standalone/deployments" />  
									</target>
								</configuration>
							</execution>
						</executions>
						<dependencies>
							<dependency>
								<groupId>org.apache.ant</groupId>
								<artifactId>ant-jsch</artifactId>
								<version>1.10.0</version>
							</dependency>
							<dependency>
								<groupId>com.jcraft</groupId>
								<artifactId>jsch</artifactId>
								<version>0.1.54</version>
							</dependency>
						</dependencies>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

	<dependencies>
		<dependency>
			<groupId>de.mpg.mpdl.inge</groupId>
			<artifactId>aa_presentation</artifactId>
			<type>war</type>
		</dependency>
		<dependency>
			<groupId>de.mpg.mpdl.inge</groupId>
			<artifactId>cone_presentation</artifactId>
			<type>war</type>
		</dependency>
		<dependency>
			<groupId>de.mpg.mpdl.inge</groupId>
			<artifactId>pubman_presentation</artifactId>
			<type>war</type>
		</dependency>
		<dependency>
			<groupId>de.mpg.mpdl.inge</groupId>
			<artifactId>pubman_rest</artifactId>
			<type>war</type>
		</dependency>
		<!-- Import pubman logic and spring dependencies to use all of the dependencies as common dependencies -->
		<dependency>
			<groupId>de.mpg.mpdl.inge</groupId>
			<artifactId>pubman_logic</artifactId>
		</dependency>
		
		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-rest-webmvc</artifactId>
		</dependency>
		<dependency>
		<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-web</artifactId>
		</dependency>
	</dependencies>

</project>